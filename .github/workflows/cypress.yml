name: Cypress

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full

jobs:
  test-web-app:
    runs-on: ubuntu-latest
    steps:
      - name: Cache Rust WASM Tools
        uses: actions/cache@v3
        env:
          cache-name: cache-rust-wasm-tools
        with:
          path: ~/.cargo
          key: ${{ runner.os }}-${{ env.cache-name }}
      - name: Install Rust WASM Tools
        run: |
          cargo install wasm-pack
          cargo install rsw
      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.4
        with:
          version: 8
          run_install: false
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Build WASM Packages
        run: rsw build
      - name: Print pnpm Store Path
        id: pnpm-cache
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - name: Cache Node Dependencies
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.pnpm-cache.outputs.STORE_PATH }}
            ~/.cache/Cypress
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install Node Dependencies
        run: pnpm install --frozen-lockfile
      - name: Start Web Server
        working-directory: web-server
        run: pnpm dev &
      - name: Run Cypress
        uses: cypress-io/github-action@v4
        with:
          working-directory: web-app
          start: pnpm dev
          wait-on: "http://localhost:5173"
          record: true
          install: false # skip install since we already did it
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
